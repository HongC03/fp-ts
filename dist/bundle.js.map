{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,GAAG,uBAAuB,GAAG,sBAAsB,GAAG,yBAAyB,GAAG,mBAAmB,GAAG,WAAW;AACtI;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,0EAA0E,IAAI,kCAAkC,YAAY;AAC5H;AACA,uBAAuB;AACvB;AACA,qEAAqE,IAAI,kCAAkC,YAAY;AACvH;AACA,mBAAmB;AACnB,uFAAuF,IAAI,kCAAkC,YAAY;AACzI,sGAAsG,IAAI,kCAAkC,YAAY;AACxJ;AACA;AACA,wDAAwD,IAAI,kCAAkC,YAAY;AAC1G,CAAC;;;;;;;;;;;AChFY;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,GAAG,oBAAoB,GAAG,YAAY,GAAG,WAAW;AACrE;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;UCpDjB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,mBAAO,CAAC,+DAAyB;AACtD,cAAc,mBAAO,CAAC,iCAAU;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://fp-ts/./src/fp/try.ts","webpack://fp-ts/./src/linkedList/linkedList.ts","webpack://fp-ts/webpack/bootstrap","webpack://fp-ts/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sumWithFold = exports.stringToIntFold = exports.stringToIntMap = exports.stringArrToIntArr = exports.stringToInt = exports.sum = void 0;\nconst success = (val) => {\n    return {\n        kind: 'success',\n        val,\n        map(transfrom) {\n            return success(transfrom(this.val));\n        },\n        fold(onSuccess, onFail) {\n            return onSuccess(this.val);\n        },\n        flatMap(transfrom) {\n            return transfrom(this.val);\n        },\n    };\n};\nconst fail = (error) => {\n    return {\n        kind: 'fail',\n        error,\n        map(transfrom) {\n            return this;\n        },\n        fold(onSuccess, onFail) {\n            return onFail(this.error);\n        },\n        flatMap(transform) {\n            return this;\n        }\n    };\n};\nfunction sum(a, b) {\n    try {\n        return success(a + b);\n    }\n    catch (error) {\n        return fail(new Error('error occurred'));\n    }\n}\nexports.sum = sum;\nfunction stringToInt(s) {\n    const result = parseInt(s, 10);\n    if (isNaN(result))\n        return fail(new Error('error occurred when parse s to int'));\n    return success(result);\n}\nexports.stringToInt = stringToInt;\nfunction stringArrToIntArr(s) {\n    const resultList = [];\n    for (let i = 0; i < s.length; i++) {\n        const result = parseInt(s[i], 10);\n        if (!isNaN(result)) {\n            resultList.push(success(result));\n        }\n        else {\n            resultList.push(fail(new Error('error occurred when parse s to int')));\n        }\n    }\n    return resultList;\n}\nexports.stringArrToIntArr = stringArrToIntArr;\nconst stringToIntMap = (s) => {\n    return stringToInt(s).map((val) => val + 1);\n};\nexports.stringToIntMap = stringToIntMap;\nconst stringToIntFold = (s) => {\n    return stringToInt(s).fold((val) => console.log(`Success: result is ${val}`), (err) => console.log(`Fail: ${err.message}`));\n};\nexports.stringToIntFold = stringToIntFold;\nconst sumWithFold = (a) => (b) => {\n    return sum(a, b).fold((val) => console.log(`Success: result is ${val}`), (err) => console.log(`Fail: ${err.message}`));\n};\nexports.sumWithFold = sumWithFold;\nstringToInt('日').map((val) => val + 1).fold((val) => console.log(`Success: result is ${val}`), (err) => console.log(`Fail: ${err.message}`));\nstringToInt('123').flatMap((val) => success(val + 1)).fold((val) => console.log(`Success: result is ${val}`), (err) => console.log(`Fail: ${err.message}`));\nstringArrToIntArr(['123', '日', '4321'])\n    .forEach((val) => {\n    val.fold((val) => console.log(`Success: result is ${val}`), (err) => console.log(`Fail: ${err.message}`));\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printList = exports.linkedListOf = exports.cons = exports.nil = void 0;\n// constructor\nexports.nil = {\n    kind: 'Nil',\n    map(transfrom) {\n        return this;\n    }\n};\nconst cons = (head, tail) => {\n    return {\n        kind: 'Cons',\n        head: head,\n        tail: tail,\n        map(transfrom) {\n            return (0, exports.cons)(transfrom(this.head), this.tail.map(transfrom));\n        }\n    };\n};\nexports.cons = cons;\nfunction getCons(list) {\n    if (list.kind === 'Cons') {\n        return 'Cons';\n    }\n    else if (list.kind === 'Nil') {\n        return 'Nil';\n    }\n    else {\n        const exhaustiveCheck = list;\n        return exhaustiveCheck;\n    }\n}\n// Array<T>\n// reduce = <U> (callbackFn: (acc: U, curr: T), initialValue: U)\nconst linkedListOf = (...args) => {\n    return args\n        .reduceRight(// = reverse.reduce\n    (tail, head) => (0, exports.cons)(head, tail), exports.nil);\n};\nexports.linkedListOf = linkedListOf;\nconst printList = (list, elementList = []) => {\n    // base case\n    if (list.kind === 'Nil') {\n        const printStatement = elementList.join(' -> ').concat(' -> null');\n        console.log(printStatement);\n        return;\n    }\n    const cons = list;\n    elementList.push(cons.head);\n    (0, exports.printList)(cons.tail, elementList);\n};\nexports.printList = printList;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst linkedList_1 = require(\"./linkedList/linkedList\");\nconst try_1 = require(\"./fp/try\");\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const testText = document.querySelector(\"h1\");\n    if (testText != null) {\n        testText.innerText = \"Hello World\";\n    }\n});\nconst list = (0, linkedList_1.linkedListOf)(1, 2, 3, 4);\nconst mappedList = list.map(x => x != null ? x * 2 : x);\n(0, linkedList_1.printList)(mappedList);\nconsole.log((0, try_1.sum)(1, 2).map((val) => val + 2));\nfunction getNestedJsonProperty(nestedObj, name) {\n    const level = name.split('.');\n    function helper(currLevel, currObj) {\n        if (currObj === undefined)\n            throw Error('undefined');\n        if (currLevel > (level.length - 1))\n            return currObj;\n        if (typeof currObj === 'string')\n            throw Error('Invalid path: Reached a string before completing the path');\n        const nextLevel = currObj[level[currLevel]];\n        return helper(currLevel + 1, nextLevel);\n    }\n    return helper(0, nestedObj);\n}\nfunction getNestedJsonProperty1(nestedObj, name) {\n    let level = name.split(\".\");\n    const helper = (obj, currLevel) => {\n        let curr = level[currLevel];\n        if (curr === undefined)\n            throw Error('undefined');\n        if (currLevel === level.length - 1)\n            return obj[curr];\n        return helper(obj[curr], currLevel + 1);\n    };\n    return helper(nestedObj, 0);\n}\nconst mockObj = {\n    user: {\n        name: {\n            last: \"chris\"\n        }\n    }\n};\nconsole.log('user: ' + getNestedJsonProperty(mockObj, 'user'));\nconsole.log('user.name: ' + getNestedJsonProperty(mockObj, 'user.name'));\nconsole.log('user.name.last: ' + getNestedJsonProperty(mockObj, 'user.name.last'));\n"],"names":[],"sourceRoot":""}